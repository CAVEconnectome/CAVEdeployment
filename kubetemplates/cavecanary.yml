apiVersion: v1
kind: ConfigMap
metadata:
  name: cavecanary-config-v${CAVECANARY_CONFIG_VERSION}
  namespace: default
data:
  config.cfg: |
    [Settings]
    DATASTACK_NAME = ${MAT_DATASTACKS}
    SERVER_ADDRESS = https://${GLOBAL_SERVER}
    SLACK_API_TOKEN = ${SLACK_API_TOKEN}
    SLACK_CHANNEL = ${SLACK_CHANNEL}
    NUM_TEST_ANNOTATIONS = 1000
    CHECK_INTERVAL = 60
---
apiVersion: v1
kind: Service
metadata:
  name: cavecanary-service
spec:
  type: NodePort
  selector:
    app: cavecanary
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cavecanary
spec:
  selector:
    matchLabels:
      app: cavecanary
  template:
    metadata:
      labels:
        app: cavecanary
    spec:
      tolerations:
        - key: "pool"
          operator: "Equal"
          value: "${LIGHTWEIGHT_POOL}"
          effect: "NoSchedule"
      nodeSelector:
        cloud.google.com/gke-nodepool: ${LIGHTWEIGHT_POOL}
      volumes:
        - name: cavecanary-config-volume
          configMap:
            name: cavecanary-config-v${CAVECANARY_CONFIG_VERSION}
        - name: google-cloud-key
          secret:
            secretName: ${PYCG_SERVICE_ACCOUNT_SECRET}
      containers:
        - name: cavecanary
          image: ${DOCKER_REPOSITORY}/cavecanary:v${CAVECANARY_VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: cavecanary-config-volume
              mountPath: /app/cavecanary/config/
            - name: google-cloud-key
              mountPath: /root/.cloudvolume/secrets
          env:
            - name: CAVECANARY_CONFIG_FILE
              value: /app/cavecanary/config/config.cfg
          resources:
            requests:
              memory: 1000Mi
              cpu: 200m
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 60
