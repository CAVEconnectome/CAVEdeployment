apiVersion: v1
kind: ConfigMap
metadata:
  name: info-config-v${INFOSERVICE_CONFIG_VERSION}
data:
  config.cfg: |
    import json
    import os
    CSRF_SESSION_KEY = "${INFOSERVICE_CSRF_SECRET_KEY}"
    SECRET_KEY = "b${INFOSERVICE_SECRET_KEY}"
    SQLALCHEMY_DATABASE_URI = "${SQL_DB_TYPE}://${POSTGRES_WRITE_USER}:${POSTGRES_WRITE_USER_PASSWORD}@127.0.0.1:3306/${SQL_INFO_DB_NAME}"
    NEUROGLANCER_URL = "${NEUROGLANCER_VIEWER_URL}"
    if os.environ.get("DAF_CREDENTIALS", None) is not None:
        with open(os.environ.get("DAF_CREDENTIALS"), "r") as f:
            AUTH_TOKEN = json.load(f)["token"]
    else:
        AUTH_TOKEN = ""
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: infoservice-scaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: infoservice
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
kind: Service
apiVersion: v1
metadata:
  name: infoservice-service
spec:
  type: NodePort
  selector:
    app: infoservice
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infoservice
spec:
  selector:
    matchLabels:
      app: infoservice
  template:
    metadata:
      labels:
        app: infoservice
    spec:
      volumes:
        - name: infoservice-config-volume
          configMap:
            name: info-config-v${INFOSERVICE_CONFIG_VERSION}
        - name: cloudsql-instance-credentials-volume
          secret:
            secretName: ${CLOUD_SQL_SERVICE_ACCOUNT_SECRET}
        - name: infoservice-cloudvolume-secret-volume
          secret:
            secretName: ${INFOSERVICE_SERVICE_ACCOUNT_SECRET}
      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.6
          command:
            [
              "/cloud_sql_proxy",
              "-instances=${PROJECT_NAME}:${REGION}:${SQL_INSTANCE_NAME}=tcp:3306",
              "-credential_file=/secrets/cloudsql/${GOOGLE_SECRET_FILENAME}",
            ]
          resources:
            requests:
              memory: 8Mi
              cpu: 10m
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials-volume
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: infoservice
          image: ${DOCKER_REPOSITORY}/annotationframeworkinfoservice:v${INFOSERVICE_VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: infoservice-config-volume
              mountPath: /app/annotationinfoservice/instance/
            - name: infoservice-cloudvolume-secret-volume
              mountPath: /home/nginx/.cloudvolume/secrets
          env:
            - name: ANNOTATIONINFOSERVICE_SETTINGS
              value: /app/annotationinfoservice/instance/config.cfg
            - name: GLOBAL_SERVER
              value: https://${GLOBAL_SERVER}
            - name: AUTH_URI
              value: ${AUTH_URI}
            - name: STICKY_AUTH_URL
              value: ${STICKY_AUTH_URL}
            - name: AUTH_URL
              value: ${AUTH_URL}
            - name: INFO_URL
              value: ${INFO_URL}
            - name: DAF_CREDENTIALS
              value: /home/nginx/.cloudvolume/secrets/${CAVE_SECRET_FILENAME}
          resources:
            requests:
              memory: 300Mi
              cpu: 20m
          readinessProbe:
            httpGet:
              path: /info
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /info
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 60
        - name: sysctl-buddy
          image: alpine:3.4
          command:
            - /bin/sh
            - -c
            - |
              while true; do
                sysctl -w net.core.somaxconn=32768
                sysctl -w net.ipv4.ip_local_port_range='1024 65535'
                sleep 10
              done
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 10Mi
              cpu: 5m
