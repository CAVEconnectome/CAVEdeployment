apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tourguide-scaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tourguide
  minReplicas: ${TOURGUIDE_MIN_REPLICAS}
  maxReplicas: ${TOURGUIDE_MAX_REPLICAS}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 85
    - type: Pods
      pods:
        metric:
          name: custom.googleapis.com|http|tourguide_active_requests
        target:
          type: AverageValue
          averageValue: 50
---
kind: Service
apiVersion: v1
metadata:
  name: tourguide-service
spec:
  type: NodePort
  selector:
    app: tourguide
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tourguide
spec:
  selector:
    matchLabels:
      app: tourguide
  template:
    metadata:
      labels:
        app: tourguide
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      tolerations:
        - key: "pool"
          operator: "Equal"
          value: "${MESH_POOL}"
          effect: "NoSchedule"
      nodeSelector:
        cloud.google.com/gke-nodepool: ${MESH_POOL}
      volumes:
        - name: prometheus-data
          emptyDir: {}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: sysctl-startup
          image: alpine:3.4
          command:
            - /bin/sh
            - -c
            - |
                sysctl -w net.core.somaxconn=32768 > /dev/null 2>&1
                sysctl -w net.ipv4.ip_local_port_range='1024 65535' > /dev/null 2>&1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            requests:
              memory: 10Mi
              cpu: 5m
              ephemeral-storage: 30Mi
      containers:
        - name: tourguide
          image: ${DOCKER_REPOSITORY}/tourguide:v${TOURGUIDE_VERSION}
          volumeMounts:
            - name: prometheus-data
              mountPath: /tmp/prometheus_multiproc
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: AUTH_URI
              value: ${AUTH_URI}
            - name: STICKY_AUTH_URL
              value: ${STICKY_AUTH_URL}
            - name: AUTH_URL
              value: ${AUTH_URL}
            - name: TOURGUIDE_SERVER_ADDRESS
              value: ${TOURGUIDE_SERVER_ADDRESS}
            - name: TOURGUIDE_LOG_LEVEL
              value: ${TOURGUIDE_LOG_LEVEL}
            - name: TOURGUIDE_TMP_DIR
              value: ${TOURGUIDE_TMP_DIR}
            - name: TOURGUIDE_TIMEOUT
              value: "${TOURGUIDE_TIMEOUT}"
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /tmp/prometheus_multiproc
          resources:
            requests:
              memory: 750Mi 
              cpu: 280m
              ephemeral-storage: 1500Mi
            limits:
              ephemeral-storage: 2000Mi
          readinessProbe:
            httpGet:
              path: /tourguide/version
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /tourguide/version
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 60
        - name: tourguide-metrics
          image: ${DOCKER_REPOSITORY}/tourguide-metrics:v${TOURGUIDE_VERSION}
          volumeMounts:
            - name: prometheus-data
              mountPath: /tmp/prometheus_multiproc
          ports:
            - containerPort: 9090
          env:
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /tmp/prometheus_multiproc
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 30m
              memory: 80Mi 
        - name: prometheus-to-sd
          image: gcr.io/google-containers/prometheus-to-sd:v0.9.2
          command: ["/monitor"]
          args:
            - --source=http://localhost:9090/metrics
            - --stackdriver-prefix=custom.googleapis.com
            - --pod-id=$(POD_ID)
            - --namespace-id=$(POD_NAMESPACE)
          env:
            # save Kubernetes metadata as environment variables for use in metrics
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              memory: 30Mi
              cpu: 10m
              ephemeral-storage: 30Mi
            limits:
              memory: 50Mi
              cpu: 50m
              ephemeral-storage: 50Mi